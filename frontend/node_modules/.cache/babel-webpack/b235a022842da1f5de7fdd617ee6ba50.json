{"ast":null,"code":"import { EMPTY } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FormService = /*#__PURE__*/(() => {\n  class FormService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = '../../../../../backend/src/form';\n      this.Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n    }\n\n    send(form) {\n      return this.http.post(this.baseUrl, form).pipe( //o pipe combina multiplas funções em uma só\n      catchError(e => this.error(\"erro\" + e)));\n    }\n\n    error(e) {\n      this.Toast.fire({\n        icon: 'error',\n        title: 'Erro no envio da chamado.'\n      });\n      return EMPTY;\n    }\n\n  }\n\n  FormService.ɵfac = function FormService_Factory(t) {\n    return new (t || FormService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  FormService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FormService,\n    factory: FormService.ɵfac,\n    providedIn: 'root'\n  });\n  return FormService;\n})();","map":null,"metadata":{},"sourceType":"module"}